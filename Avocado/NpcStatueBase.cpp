/*
*/

#include "AdLevel.h"
#include "AdPlayer.h"
#include "AdScreen.h"
#include "NpcStatueBase.h"
#include "AdSpriteManager.h"

//-----------------------------------------------------------------------------
void NpcStatueBase::Update(AdLevel* pLvl) {
	AdEntity::Update(pLvl);

	static int iDelay = 0;
	static bool goForward = true;

	iDelay++;

	if(goForward) {
		if(!(iDelay%8)) m_iFrameCount++;

		if(m_iFrameCount == 8) {
			goForward = false;
		}
	} else {
		if(!(iDelay%8)) m_iFrameCount--;

		if(m_iFrameCount == 0) {
			goForward = true;
		}
	}
}

//-----------------------------------------------------------------------------
void NpcStatueBase::Render(class AdLevel* pLvl) {
	AdEntity::Render(pLvl);

	SDL_Point pnt = {m_recTrigger.x+4-8*9/2, m_recTrigger.y+2*8+m_iFrameCount};
	SDL_Surface* msg = AdSpriteManager::BuildSprite(">^.^< +^.^+ =^.^= ~^.^~");
	pnt.x += 8; pnt.y += 8;
	AdScreen::DrawSprite(pnt, msg);
	SDL_FreeSurface(msg);

	if(m_bTriggered) {
		int ind[] = {
			2*64+14, 1*64+15, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+16, 1*64+17, 1*64+13,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			1*64+18, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 1*64+12, 2*64+18,
			2*64+13, 2*64+15, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+16, 2*64+17, 1*64+14,
		};

		SDL_Surface* bkg = AdSpriteManager::BuildSprite(41, 9, ind);
		SDL_Point pnt = {-4, -4};
		AdScreen::DrawSprite(pnt, bkg);
		SDL_FreeSurface(bkg);

		//>^.^< +^.^+ =^.^= ~^.^~
		AdPlayer* pPlayer = pLvl->GetPlayer();
		SDL_Surface *msg, *msg0, *msg1, *msg2, *msg3;

		if(pPlayer->hasTalkedWithBurrito) {
			msg = AdSpriteManager::BuildSprite("SPIRITS: YOU HAVE LOCATED THE PUZZLE");
			msg0 = AdSpriteManager::BuildSprite("PIECE! WE HAVE MOVED IT TO ITS RIGHTFUL");
			msg1 = AdSpriteManager::BuildSprite("LOCATION IN THE SKY!!");
			msg2 = AdSpriteManager::BuildSprite("");
			msg3 = AdSpriteManager::BuildSprite("");

			pPlayer->hasPuzzlePiece = true;

		} else {
			msg = AdSpriteManager::BuildSprite("SPIRITS: WE ARE THE FOUR ANCIENT");
			msg0 = AdSpriteManager::BuildSprite("CITTIES! WE HAVE JOINED TOGETHER IN");
			msg1 = AdSpriteManager::BuildSprite("SPIRIT TO HELP YOU! WE NEED THE");
			msg2 = AdSpriteManager::BuildSprite("LOCATION OF THE PUZZLE PIECE AND WE");
			msg3 = AdSpriteManager::BuildSprite("WILL MOVE IT FOR YOU!");
		}

		pnt.x += 8; pnt.y += 8;
		AdScreen::DrawSprite(pnt, msg);
		pnt.y += 8;
		AdScreen::DrawSprite(pnt, msg0);
		pnt.y += 8;
		AdScreen::DrawSprite(pnt, msg1);
		pnt.y += 8;
		AdScreen::DrawSprite(pnt, msg2);
		pnt.y += 8;
		AdScreen::DrawSprite(pnt, msg3);

		SDL_FreeSurface(msg);
		SDL_FreeSurface(msg0);
		SDL_FreeSurface(msg1);
		SDL_FreeSurface(msg2);
		SDL_FreeSurface(msg3);
	}
}
